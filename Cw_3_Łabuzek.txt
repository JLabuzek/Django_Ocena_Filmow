(venv) PS M:\Nauka\Movie_Rating_API> python manage.py shell
Python 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from .models import Actors
Traceback (most recent call last):     
  File "<console>", line 1, in <module>
KeyError: "'__name__' not in globals"  
>>> from apka.models import Actors 
>>> Actors.objects.all()
<QuerySet [<Actors: Ralph Fiennes>, <Actors: Juliette Binoche>, <Actors: Willem Dafoe>, <Actors: Keanu Reeves>, <Actors: Carrie-Anne Moss>, <Actors: Laurence Fishburne>, <Actors: Harrison Ford>, <Actors: Garry Oldman>, <Actors: Natalie Portman>, <Actors: Russel Crowe>, <Actors: Joaquin Phoenix>, <Actors: Connie Nielsen>, <Actors: John Travolta>, <Actors: Uma Thurman>, <Actors: Samuel L. Jackson>]>
>>> Actors.objects.create(name='Marcin', surname='Dorocinski')
<Actors: Marcin Dorocinski>
>>> Actors.objects.all()
<QuerySet [<Actors: Ralph Fiennes>, <Actors: Juliette Binoche>, <Actors: Willem Dafoe>, <Actors: Keanu Reeves>, <Actors: Carrie-Anne Moss>, <Actors: Laurence Fishburne>, <Actors: Harrison Ford>, <Actors: Garry Oldman>, <Actors: Natalie Portman>, <Actors: Russel Crowe>, <Actors: Joaquin Phoenix>, <Actors: Connie Nielsen>, <Actors: John Travolta>, <Actors: Uma Thurman>, <Actors: Samuel L. Jackson>, <Actors: Marcin Dorocinski>]>
>>> Actors.objects.filter(name='Borys').update(name='Szyc')
1
>>> Actors.objects.all()
<QuerySet [<Actors: Ralph Fiennes>, <Actors: Juliette Binoche>, <Actors: Willem Dafoe>, <Actors: Keanu Reeves>, <Actors: Carrie-Anne Moss>, <Actors: Laurence Fishburne>, <Actors: Harrison Ford>, <Actors: Garry Oldman>, <Actors: Natalie Portman>, <Actors: Russel Crowe>, <Actors: Joaquin Phoenix>, <Actors: Connie Nielsen>, <Actors: John Travolta>, <Actors: Uma Thurman>, <Actors: Samuel L. Jackson>, <Actors: Borys Szyc>]>
>>> from apka.models import Movie 
>>> Movie.objects.filter(title='The Matrix')
<QuerySet [<Movie: The Matrix, (1999-08-13)>]>
>>> Movie.objects.get(title='Pulp Fiction')
<Movie: Pulp Fiction, (1995-05-19)>
>>> Movie.objects.all().order_by('rating')     
<QuerySet [<Movie: Gladiator, (2000-07-14)>, <Movie: Pulp Fiction, (1995-05-19)>, <Movie: Raiders of the Lost Ark, (1981-06-12)>, <Movie: Star Wars, (1997-07-19)>, <Movie: The Matrix, (1999-08-13)>, <Movie: The Matrix, (1999-08-13)>, <Movie: The English Patient, (1997-04-04)>, <Movie: Léon, (1995-05-26)>, <Movie: Pulp Fiction, (1995-05-19)>, <Movie: Gladiator, (2000-07-14)>, <Movie: Gladiator, (2000-07-14)>, <Movie: Pulp Fiction, (1995-05-19)>, <Movie: Léon, (1995-05-26)>, <Movie: The English Patient, (1997-04-04)>, <Movie: The Matrix, (1999-08-13)>, <Movie: The Matrix, (1999-08-13)>, <Movie: The English Patient, (1997-04-04)>, <Movie: Léon, (1995-05-26)>, <Movie: Pulp Fiction, (1995-05-19)>, <Movie: Gladiator, (2000-07-14)>, '...(remaining elements truncated)...']>